
stages:
  - test
  - assets

variables:
  GIT_STRATEGY: clone
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  APPTAINER_DOCKER_TAG: "v3.9.4"
  DOCKER_HUB_TAG: "lcsbbiocore/gigasom.jl"
  DOCKER_GHCR_TAG: "ghcr.io/lcsb-biocore/docker/gigasom.jl"
  APPTAINER_GHCR_TAG: "lcsb-biocore/apptainer/gigasom.jl"

#
# Predefined conditions for triggering jobs
#

.global_trigger_pull_request: &global_trigger_pull_request
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"

.global_trigger_full_tests: &global_trigger_full_tests
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH == "master"

.global_trigger_test_containers: &global_trigger_test_containers
  rules:
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
      when: never
    - if: $CI_COMMIT_BRANCH == "develop"

.global_trigger_release_containers: &global_trigger_release_containers
  rules:
    - if: $CI_COMMIT_TAG =~ /^v/

#
# Test environment & platform settings
#

.global_dind: &global_dind
  image: docker:20.10.12
  tags:
    - privileged
  services:
    - name: docker:20.10.12-dind
      command: ["--tls=false", "--mtu=1458", "--registry-mirror", "https://docker-registry.lcsb.uni.lu"]
  before_script:
    - docker login -u $CI_USER_NAME -p $GITLAB_ACCESS_TOKEN $CI_REGISTRY

.global_julia17: &global_julia17
  variables:
    JULIA_VER: "v1.7.0"

.global_env_linux: &global_env_linux
  script:
    - $ARTENOLIS_SOFT_PATH/julia/$JULIA_VER/bin/julia --inline=yes --check-bounds=yes --color=yes --project=@. -e 'import Pkg; Pkg.test(; coverage = true)'

.global_env_win: &global_env_win
  script:
    - $global:LASTEXITCODE = 0 # Note the global prefix.
    - Invoke-Expression $Env:ARTENOLIS_SOFT_PATH"\julia\"$Env:JULIA_VER"\bin\julia --inline=yes --check-bounds=yes --color=yes --project=@. -e 'import Pkg; Pkg.test(; coverage = true)'"
    - exit $LASTEXITCODE

.global_env_win10: &global_env_win10
  tags:
    - windows10
  <<: *global_env_win

.global_env_mac: &global_env_mac
  tags:
    - mac
  script:
    - $ARTENOLIS_SOFT_PATH/julia/$JULIA_VER/Contents/Resources/julia/bin/julia --inline=yes --check-bounds=yes --color=yes --project=@. -e 'import Pkg; Pkg.test(; coverage = true)'

.global_build_apptainer: &global_build_apptainer
  image:
    name: "quay.io/singularity/singularity:$APPTAINER_DOCKER_TAG"
    # the image entrypoint is the singularity binary by default
    entrypoint: ["/bin/sh", "-c"]
  tags:
    - privileged

#
# TESTS
#
# The "basic" required test that gets triggered for the basic testing, runs in
# any available docker and current julia
#

docker:julia1.7:
  stage: test
  image: $CI_REGISTRY/r3/docker/julia-custom
  script:
    - julia --check-bounds=yes --inline=yes --project=@. -e "import Pkg; Pkg.test(; coverage = true)"
  after_script:
    - julia --project=test/coverage test/coverage/coverage-summary.jl
  <<: *global_trigger_pull_request

#
# The required compatibility test to pass on branches&tags before the docs get
# built & deployed
#

linux:julia1.7:
  stage: test
  tags:
    - slave01
  <<: *global_trigger_full_tests
  <<: *global_julia17
  <<: *global_env_linux

#
# Additional platform&environment compatibility tests
#

windows10:julia1.7:
  stage: test
  <<: *global_trigger_full_tests
  <<: *global_julia17
  <<: *global_env_win10

mac:julia1.7:
  stage: test
  <<: *global_trigger_full_tests
  <<: *global_julia17
  <<: *global_env_mac

#
# CONTAINERS
#

apptainer-test:
  stage: assets
  script: |
    alias apptainer=singularity
    apptainer build gigasom-test.sif gigasom.def
  <<: *global_build_apptainer
  <<: *global_trigger_test_containers

apptainer-release:
  stage: assets
  script:
    - |
      # build the container
      alias apptainer=singularity
      apptainer build gigasom.sif gigasom.def
    - |
      # push to GHCR
      alias apptainer=singularity
      export SINGULARITY_DOCKER_USERNAME="$GITHUB_ACCESS_USERNAME"
      export SINGULARITY_DOCKER_PASSWORD="$GITHUB_ACCESS_TOKEN"
      apptainer push gigasom.sif "oras://ghcr.io/$APPTAINER_GHCR_TAG:latest"
      apptainer push gigasom.sif "oras://ghcr.io/$APPTAINER_GHCR_TAG:$CI_COMMIT_TAG"
  <<: *global_build_apptainer
  <<: *global_trigger_release_containers

docker-test:
  stage: assets
  script:
    - docker build -t "$DOCKER_HUB_TAG:testing" .
  <<: *global_dind
  <<: *global_trigger_test_containers

docker-release:
  stage: assets
  script:
    - docker build -t "$DOCKER_HUB_TAG:latest" .
      # alias and push to docker hub
    - docker tag "$DOCKER_HUB_TAG:latest" "$DOCKER_HUB_TAG:$CI_COMMIT_TAG"
    - echo "$DOCKER_IO_ACCESS_TOKEN" | docker login --username "$DOCKER_IO_USER" --password-stdin
    - docker push "$DOCKER_HUB_TAG:latest"
    - docker push "$DOCKER_HUB_TAG:$CI_COMMIT_TAG"
      # make 2 extra aliases and push to GHCR
    - docker tag "$DOCKER_HUB_TAG:latest" "$DOCKER_GHCR_TAG:latest"
    - docker tag "$DOCKER_HUB_TAG:latest" "$DOCKER_GHCR_TAG:$CI_COMMIT_TAG"
    - echo "$GITHUB_ACCESS_TOKEN" | docker login ghcr.io --username "$GITHUB_ACCESS_USERNAME" --password-stdin
    - docker push "$DOCKER_GHCR_TAG:latest"
    - docker push "$DOCKER_GHCR_TAG:$CI_COMMIT_TAG"
  <<: *global_dind
  <<: *global_trigger_release_containers
